{"version":3,"file":"bundles/pages/index.js","sources":["webpack:///webpack/bootstrap c7db09bd0261911814f4","webpack:///classes/Helper.js","webpack:///containers/App.js","webpack:///containers/Navbar.js","webpack:///pages/index.js","webpack:///external \"cytoscape\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c7db09bd0261911814f4","export default class Helper {\n  constructor() {\n\n  }\n\n  static random(min, max) {\n    return Math.floor(min + (Math.random() * (max - min)));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// classes/Helper.js","import React from 'react';\n\nimport cytoscape from 'cytoscape';\n\nimport Navbar from '../containers/Navbar';\nimport Helper from '../classes/Helper';\n\nconst readChars = [\"A\", \"C\", \"G\", \"T\"];\n\nvar cy;\nvar numbers = []\nfor (var i = 0; i < 51; i++) {\n  numbers.push(i%10);\n}\n\nvar busy = false;\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      step: 1,\n      sequence: \"\",\n      lengthSequence: 50,\n      minLengthRead: 5,\n      maxLengthRead: 10,\n      animationText: \"\",\n      animate: false,\n      reads: [],\n      busy: false,\n      waitingFunctionList: [],\n      showReads: false\n    }\n  }\n\n  createGraph(elements, callback) {\n    cy = cytoscape({\n      container: document.getElementById('cy'),\n      boxSelectionEnabled: false,\n      autounselectify: true,\n\n      layout: {\n        name: 'circle'\n      },\n\n      style: cytoscape.stylesheet()\n       .selector('node')\n         .css({\n           'height': 20,\n           'width': 20,\n           'background-color': '#e8e406',\n           'content': 'data(read)',\n           'opacity': 1,\n           'transition-property': 'opacity',\n           'transition-duration': '0.5s'\n         })\n       .selector('edge')\n         .css({\n           'label': \"data(label)\",\n           'curve-style': 'bezier',\n           'width': 5,\n           'line-color': '#f2f08c',\n           'opacity': 0.7,\n           'target-arrow-shape': 'triangle',\n           'target-arrow-color': 'blue'\n         })\n       .selector('.hideNode')\n        .css({\n          'opacity': 0,\n        }),\n\n      elements: elements\n    });\n\n    callback();\n  }\n\n  generateSequence() {\n    let sequence = \"\";\n    let r = this.state.lengthSequence;\n    for(let i = 0; i < r; i++) {\n      let m = Helper.random(0, readChars.length);\n      sequence += readChars[m];\n    }\n    this.setState({step: 2, sequence: sequence});\n  }\n\n  createReads() {\n    let reads = [];\n    let i = 0;\n    let sequence = this.state.sequence;\n    let loop = true;\n    let count = 0;\n\n    while(loop) {\n      let r = Helper.random(this.state.minLengthRead, this.state.maxLengthRead+1);\n      let f = i+r;\n      if(i+r >= sequence.length) {\n        f = sequence.length;\n        loop = false;\n      }\n      let read = sequence.substring(i,f);\n      reads.push(read);\n      this.setState({reads: reads});\n      if(this.state.busy || busy) {\n        let waitingFunctionList = this.state.waitingFunctionList;\n        waitingFunctionList.push({\n          function: this.showRead,\n          data: [this, count,  i, read]\n        });\n        this.setState({waitingFunctionList: waitingFunctionList});\n      } else {\n        busy = true;\n        this.setState({busy: true});\n        this.showRead([this, count,  i, read]);\n      }\n      let b = Helper.random(3, 6);\n      i = f-b;\n      count++;\n    }\n    this.setState({step: 3, reads: reads});\n  }\n\n  showRead(data) {\n\n    let self = data[0];\n    let count = data[1];\n    let index = data[2];\n    let read = data[3];\n\n    setTimeout(() => {\n      self.setState({animate: false});\n\n      let anim = document.getElementById(\"animationText\");\n      let r = document.getElementById(\"read\" + count);\n      let p1 = document.getElementById(\"sequence\" + index).getBoundingClientRect();\n      let p2 = document.getElementById(\"read\" + count + \"char0\").getBoundingClientRect();\n      self.setState({animationText: read})\n      let top1 = p1.top - 5;\n      anim.style.top = top1 + \"px\";\n      anim.style.left = p1.left + \"px\";\n      anim.style.fontSize = \"25px\";\n\n      setTimeout(() => {\n        self.setState({animate: true});\n\n        let top2 = p2.top - 8;\n        anim.style.top = top2 + \"px\";\n        anim.style.left = p2.left + \"px\";\n        anim.style.fontSize = \"20px\";\n      }, 500);\n      (function(self, count, index, read) {\n        setTimeout(() => {\n          r.style.opacity = 1;\n          self.setState({animate: false});\n          self.endBusy();\n        }, 950);\n      })(self);\n    }, 600);\n    // }, 0 + (1200 * count));\n  }\n\n  shuffleReads() {\n    let lol = this.state.reads;\n    for(let i = 0; i < lol.length; i++) {\n      let index = Helper.random(0, lol.length);\n      let r = lol[i];\n      lol[i] = lol[index];\n      lol[index] = r;\n    }\n    console.log(lol);\n  }\n\n  showGraph() {\n    let elements = [];\n    for(let i = 0; i < this.state.reads.length; i++) {\n      let r = {};\n      r.group = 'nodes';\n      r.data = {\n        id: 'r' + i,\n        read: this.state.reads[i],\n        label: '<h1>sfjdqsqkldj<h1>'\n      };\n      r.classes = 'hideNode';\n      elements.push(r);\n    }\n    this.setState({step: 3});\n    this.createGraph(elements, this.showNodes);\n  }\n\n  showNodes() {\n    let nodes = cy.nodes();\n    for(let i = 0; i < nodes.length; i++) {\n      (function(ind) {\n        setTimeout(() => {\n          nodes[i].removeClass('hideNode');\n        }, 0 + (200 * ind));\n      })(i);\n    }\n  }\n\n  skipAnimations() {\n    this.setState({waitingFunctionList: []});\n    if(this.state.step == 3) {\n      this.setState({showReads: true});\n      let anim = document.getElementById(\"animationText\");\n      anim.style.top = \"-100px\";\n    }\n  }\n\n  callFunction(callback, data) {\n    callback(data);\n  }\n\n  endBusy() {\n    busy = false;\n    this.setState({busy: false});\n    if(this.state.waitingFunctionList.length > 0) {\n      var f = this.state.waitingFunctionList.shift();\n      this.callFunction(f.function, f.data);\n    }\n  }\n\n  reset() {\n    // cy.add([\n    //   {data: { id: 'ab', weight: 3, source: 'r0', target: 'r8', label: \"label\" } },\n    //   {data: { id: 'ac', weight: 3, source: 'r1', target: 'r9', label: \"label\" } }\n    // ]);\n    this.setState({\n      step: 1,\n      sequence: \"\",\n      lengthSequence: 50,\n      minLengthRead: 5,\n      maxLengthRead: 10,\n      animationText: \"\",\n      animate: false,\n      reads: [],\n      busy: false,\n      waitingFunctionList: []\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n\n        <Navbar\n          step={this.state.step}\n          lengthSequence={this.state.lengthSequence}\n          minLengthRead={this.state.minLengthRead}\n          maxLengthRead={this.state.maxLengthRead}\n\n          changeLengthSequence={e => this.setState({lengthSequence: e.target.value})}\n          changeMinLength={e => this.setState({minLengthRead: e.target.value})}\n          changeMaxLength={e => this.setState({maxLengthRead: e.target.value})}\n\n          generateSequence={() => this.generateSequence()}\n          createReads={() => this.createReads()}\n          shuffleReads={() => this.shuffleReads()}\n          showGraph={() => this.showGraph()}\n          showSidebar={() => {this.setState({step: 4}); setTimeout(() => {cy.resize(); cy.center();}, 1100); }}\n        />\n\n        <h6 id=\"animationText\" className={this.state.animate ? 'animate' : ''}>\n          {this.state.animationText.split('').map((letter, index) => (\n            <span key={index} id={\"animation\" + index} className={\"read\" + letter}>{letter}</span>\n          ))}\n        </h6>\n\n        <div id=\"reset\">\n          <button className=\"btn btn-outline-dark\" onClick={() => this.reset()}>RESET</button>\n          <button className=\"btn btn-outline-warning\" onClick={() => this.skipAnimations()}>SKIP ANIMATIONS</button>\n        </div>\n\n        {/* {this.state.step == 1 || this.state.step == 2 ?\n          <div className=\"wrapper\">\n            <div className=\"row justify-content-center\">\n              {this.state.reads.map((read, index) => (\n                <div key={index} className=\"read col-md-2\">\n                  {read.split('').map((letter, index) => (\n                    <span key={index} className={\"read\" + letter}>{letter}</span>\n                  ))}\n                </div>\n              ))}\n            </div>\n          </div>\n          : ''\n        } */}\n        <div id=\"graphs\">\n          <div id=\"sidebar\" className={this.state.step == 4 ? 'open' : ''}>\n            <div id=\"sequenceContainer\">\n              <h6>\n                {this.state.sequence.split('').map((letter, index) => (\n                  <span key={index} id={\"sequence\" + index} className={\"read\" + letter}>{letter}</span>\n                ))}\n              </h6>\n              {/* <h6 id=\"numbers\">\n                {numbers.map((letter, index) => (\n                  <span key={index}>{letter}</span>\n                ))}\n              </h6> */}\n            </div>\n            <div id=\"readsContainer\">\n              <div className={this.state.showReads ? \"row justify-content-center showReads\" : \"row justify-content-center\"}>\n                {this.state.reads.map((read, index) => (\n                  <div key={index} id={\"read\" + index} className=\"read col-md-2\">\n                    {read.split('').map((letter, index2) => (\n                      <span key={index2} id={\"read\" + index + \"char\" + index2} className={\"read\" + letter}>{letter}</span>\n                    ))}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n          <div id=\"cy\" className={this.state.step == 4 ? 'open' : ''}></div>\n        </div>\n\n        <style jsx>{`\n          #animationText {\n            // opacity: 0;\n            top: 200px;\n            left: 0px;\n            z-index: 1000;\n            position: fixed;\n            border-bottom: 2px solid green;\n          }\n          #animationText.animate {\n            transition: top .5s linear, left .5s linear, font-size .5s linear;\n          }\n          #reset {\n            position: fixed;\n            z-index: 1000;\n            left: 10px;\n            bottom: 10px;\n          }\n          #graphs {\n            display: flex;\n            flex-direction: column;\n          }\n          #sidebar {\n            width 100%;\n            height: calc(100vh - 56px);\n            padding: 0 5%;\n            background: #ecf0f1;\n            transition: height 1s ease;\n            display: flex;\n            flex-direction: column;\n            // justify-content: center;\n            // align-items: center;\n          }\n          #sidebar.open {\n            height: calc(25vh - 56px);;\n          }\n          #sequenceContainer {\n            padding-top: 25px;\n            text-align: center;\n          }\n          #sequenceContainer h6, #numbers, #animationText {\n            font-size: 25px;\n            font-weight: bold;\n            word-break: break-all;\n            line-height: 40px;\n            letter-spacing: 4px;\n            font-family: monospace;\n          }\n          #cy {\n            width: 100%;\n            height: calc(80vh - 56px);\n            transition: height 1s ease;\n          }\n          .wrapper {\n            height: calc(100vh - 56px);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 25px;\n          }\n          .row {\n            max-height: calc(100vh - 56px);\n            padding 25px 10px;\n            text-align: center;\n            font-weight: bold;\n            font-size: 20px;\n            letter-spacing: 4px;\n            font-family: monospace;\n          }\n          .read {\n            opacity: 0;\n          }\n          .showReads .read {\n            opacity: 1;\n          }\n          .readA {\n            color: #27ae60;\n          }\n          .readC {\n            color: #2980b9;\n          }\n          .readG {\n            color: #c0392b;\n          }\n          .readT {\n            color: #8e44ad;\n          }\n        `}</style>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// containers/App.js","import React from 'react';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div id=\"navbar\">\n\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a className=\"navbar-brand\" href=\"#\">Overlap Layout Consensus</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n            </ul>\n            {this.props.step == 1 ?\n              <div className=\"form-inline my-2 my-lg-0\">\n                <label>Length Of Sequence</label>\n                <input className=\"form-control\" type=\"number\" min=\"10\" value={this.props.lengthSequence} onChange={e => this.props.changeLengthSequence(e)}/>\n                <button className=\"btn btn-outline-danger my-2 my-sm-0\" onClick={() => this.props.generateSequence()}>Generate sequence</button>\n              </div>\n            : '' }\n            {this.props.step == 2 ?\n              <div className=\"form-inline my-2 my-lg-0\">\n\n                <label>Min Length Reads:</label>\n                <input className=\"form-control\" type=\"number\" min=\"5\" max=\"10\" value={this.props.minLengthRead} onChange={e => this.props.changeMinLength(e)}/>\n                <label>Max Length Reads:</label>\n                <input className=\"form-control\" type=\"number\" min=\"5\" max=\"10\" value={this.props.maxLengthRead} onChange={e => this.props.changeMaxLength(e)}/>\n                <button className=\"btn btn-outline-danger my-2 my-sm-0\" onClick={() => this.props.createReads()}>Create reads</button>\n                {/* <button className=\"btn btn-outline-danger my-2 my-sm-0\" onClick={() => this.props.showGraph()}>Show graph</button> */}\n              </div>\n            : '' }\n            {this.props.step == 3 ?\n              <div className=\"form-inline my-2 my-lg-0\">\n                <button className=\"btn btn-outline-danger my-2 my-sm-0\" onClick={() => this.props.shuffleReads()}>Shuffle reads</button>\n              </div>\n            : '' }\n          </div>\n        </nav>\n\n        <style jsx>{`\n          .form-control {\n            width: 100px;\n            margin-left: 10px;\n            margin-right: 20px;\n          }\n        `}</style>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// containers/Navbar.js","import React from 'react';\nimport Head from 'next/head';\n\nimport App from '../containers/App';\n\nexport default class Index extends React.Component {\n  render() {\n    return (\n      <div id=\"container\">\n        <Head>\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n          <meta charSet=\"utf-8\" />\n          <link href=\"https://use.fontawesome.com/releases/v5.0.2/css/all.css\" rel=\"stylesheet\"/>\n          <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.3/css/bootstrap.min.css\"/>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/static/css/style.css\" />\n        </Head>\n\n        <App/>\n\n        <style jsx>{`\n        `}</style>\n        <style jsx global>{`\n          html, body {\n            height: 100%;\n            overflow: hidden;\n          }\n        `}</style>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// pages/index.js","module.exports = require(\"cytoscape\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cytoscape\"\n// module id = cytoscape\n// module chunks = 3","module.exports = require(\"next/head\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"next/head\"\n// module id = next/head\n// module chunks = 3","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = react\n// module chunks = 3","module.exports = require(\"styled-jsx/style\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"styled-jsx/style\"\n// module id = styled-jsx/style\n// module chunks = 3"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnEA;;;AACA;AAAA;AAEA;AACA;;;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAHA;AAgBA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AADA;AAIA;AAnCA;AAsCA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;AAPA;AACA;AACA;AAAA;AAMA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAdA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtEA;AAAA;AAAA;AAmKA;;;;AAvYA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/BA;AAAA;AAAA;AA8CA;;;;AAjDA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;;;;AAxBA;AACA;;;;;;;;;;;;;;;;ACNA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;A","sourceRoot":""}